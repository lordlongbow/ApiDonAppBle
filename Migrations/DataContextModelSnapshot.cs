// <auto-generated />
using System;
using ApiDonAppBle.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiDonAppBle.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApiDonAppBle.Models.Comentario", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdComentario");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("ApiDonAppBle.Models.Etiqueta", b =>
                {
                    b.Property<int>("IdEtiqueta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdEtiqueta");

                    b.ToTable("Etiqueta");
                });

            modelBuilder.Entity("ApiDonAppBle.Models.Publicacion", b =>
                {
                    b.Property<int>("IdPublicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<bool>("Disponibilidad")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FotoPublicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdComenatario")
                        .HasColumnType("int");

                    b.Property<int>("IdEtiqueta")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VideoPublicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdPublicacion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Publicacion");
                });

            modelBuilder.Entity("ApiDonAppBle.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("EtiquetaPublicacion", b =>
                {
                    b.Property<int>("EtiquetasIdEtiqueta")
                        .HasColumnType("int");

                    b.Property<int>("PublicacionesIdPublicacion")
                        .HasColumnType("int");

                    b.HasKey("EtiquetasIdEtiqueta", "PublicacionesIdPublicacion");

                    b.HasIndex("PublicacionesIdPublicacion");

                    b.ToTable("PublicacionEtiqueta", (string)null);
                });

            modelBuilder.Entity("ApiDonAppBle.Models.Comentario", b =>
                {
                    b.HasOne("ApiDonAppBle.Models.Publicacion", "Publicacion")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("ApiDonAppBle.Models.Publicacion", b =>
                {
                    b.HasOne("ApiDonAppBle.Models.Usuario", "Usuario")
                        .WithMany("Publicaciones")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EtiquetaPublicacion", b =>
                {
                    b.HasOne("ApiDonAppBle.Models.Etiqueta", null)
                        .WithMany()
                        .HasForeignKey("EtiquetasIdEtiqueta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiDonAppBle.Models.Publicacion", null)
                        .WithMany()
                        .HasForeignKey("PublicacionesIdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiDonAppBle.Models.Publicacion", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("ApiDonAppBle.Models.Usuario", b =>
                {
                    b.Navigation("Publicaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
